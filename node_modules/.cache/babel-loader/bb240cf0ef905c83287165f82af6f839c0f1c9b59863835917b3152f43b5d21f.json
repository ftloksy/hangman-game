{"ast":null,"code":"var _jsxFileName = \"/home/freak/myCourse/L4T21/hangman-game/src/components/AlphabetForm.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass CharacterButton extends Component {\n  render() {\n    const {\n      character,\n      onClick\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onClick(character),\n      children: character\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this);\n  }\n}\nclass CharacterButtonRow extends Component {\n  render() {\n    const {\n      characters,\n      onClick\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: characters.map(character => /*#__PURE__*/_jsxDEV(CharacterButton, {\n        character: character,\n        onClick: onClick\n      }, character, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n}\nclass AlphabetForm extends Component {\n  constructor(props) {\n    super(props);\n    this.handleCharacterClick = character => {\n      const {\n        formData\n      } = this.state;\n      const updatedFormData = [...formData];\n      const rowIndex = updatedFormData.findIndex(row => row.indexOf(character) !== -1);\n      if (rowIndex === -1) {\n        const emptyRowIndex = updatedFormData.findIndex(row => row === '');\n        if (emptyRowIndex !== -1) {\n          updatedFormData[emptyRowIndex] = character;\n        }\n      } else {\n        const columnIndex = updatedFormData[rowIndex].indexOf(character);\n        updatedFormData[rowIndex] = updatedFormData[rowIndex].slice(0, columnIndex) + updatedFormData[rowIndex].slice(columnIndex + 1);\n      }\n      this.setState({\n        formData: updatedFormData\n      });\n    };\n    this.state = {\n      formData: ['', '', '', '', '', '']\n    };\n  }\n  render() {\n    const {\n      formData\n    } = this.state;\n    const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(CharacterButtonRow, {\n        characters: alphabet.slice(0, 4).split(''),\n        onClick: this.handleCharacterClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CharacterButtonRow, {\n        characters: alphabet.slice(4, 8).split(''),\n        onClick: this.handleCharacterClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CharacterButtonRow, {\n        characters: alphabet.slice(8, 12).split(''),\n        onClick: this.handleCharacterClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CharacterButtonRow, {\n        characters: alphabet.slice(12, 16).split(''),\n        onClick: this.handleCharacterClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CharacterButtonRow, {\n        characters: alphabet.slice(16, 20).split(''),\n        onClick: this.handleCharacterClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CharacterButtonRow, {\n        characters: alphabet.slice(20).split(''),\n        onClick: this.handleCharacterClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Form Data:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: formData.join('\\n'),\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default AlphabetForm;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","CharacterButton","render","character","onClick","props","children","fileName","_jsxFileName","lineNumber","columnNumber","CharacterButtonRow","characters","map","AlphabetForm","constructor","handleCharacterClick","formData","state","updatedFormData","rowIndex","findIndex","row","indexOf","emptyRowIndex","columnIndex","slice","setState","alphabet","split","value","join","readOnly"],"sources":["/home/freak/myCourse/L4T21/hangman-game/src/components/AlphabetForm.js"],"sourcesContent":["import React, { Component } from 'react';\n\nclass CharacterButton extends Component {\n  render() {\n    const { character, onClick } = this.props;\n    return (\n      <button onClick={() => onClick(character)}>{character}</button>\n    );\n  }\n}\n\nclass CharacterButtonRow extends Component {\n  render() {\n    const { characters, onClick } = this.props;\n    return (\n      <div>\n        {characters.map((character) => (\n          <CharacterButton\n            key={character}\n            character={character}\n            onClick={onClick}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nclass AlphabetForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formData: ['', '', '', '', '', ''],\n    };\n  }\n\n  handleCharacterClick = (character) => {\n    const { formData } = this.state;\n    const updatedFormData = [...formData];\n    const rowIndex = updatedFormData.findIndex((row) => row.indexOf(character) !== -1);\n\n    if (rowIndex === -1) {\n      const emptyRowIndex = updatedFormData.findIndex((row) => row === '');\n      if (emptyRowIndex !== -1) {\n        updatedFormData[emptyRowIndex] = character;\n      }\n    } else {\n      const columnIndex = updatedFormData[rowIndex].indexOf(character);\n      updatedFormData[rowIndex] = updatedFormData[rowIndex].slice(0, columnIndex) + updatedFormData[rowIndex].slice(columnIndex + 1);\n    }\n\n    this.setState({ formData: updatedFormData });\n  };\n\n  render() {\n    const { formData } = this.state;\n    const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n    return (\n      <form>\n        <CharacterButtonRow characters={alphabet.slice(0, 4).split('')} onClick={this.handleCharacterClick} />\n        <CharacterButtonRow characters={alphabet.slice(4, 8).split('')} onClick={this.handleCharacterClick} />\n        <CharacterButtonRow characters={alphabet.slice(8, 12).split('')} onClick={this.handleCharacterClick} />\n        <CharacterButtonRow characters={alphabet.slice(12, 16).split('')} onClick={this.handleCharacterClick} />\n        <CharacterButtonRow characters={alphabet.slice(16, 20).split('')} onClick={this.handleCharacterClick} />\n        <CharacterButtonRow characters={alphabet.slice(20).split('')} onClick={this.handleCharacterClick} />\n\n        <div>\n          <label>\n            Form Data:\n            <textarea value={formData.join('\\n')} readOnly />\n          </label>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default AlphabetForm;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}