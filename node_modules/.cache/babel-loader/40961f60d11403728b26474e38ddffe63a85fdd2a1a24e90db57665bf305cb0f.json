{"ast":null,"code":"var _jsxFileName = \"/home/freak/myCourse/L4T21/hangman-game/src/components/FileLineReader.js\";\nimport React from 'react';\nimport fs from '../assets/dictionary.txt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass FileLineReader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lines: [],\n      isStartTriggered: false\n    };\n  }\n  componentDidMount() {\n    const arr = [];\n    fetch(fs).then(r => r.text()).then(text => {\n      const arr = [];\n      const lines = text.split('\\n');\n      for (let i = 0; i < lines.length; i++) {\n        const line = lines[i].replace(/\\r?\\n|\\r/g, '');\n        if (this.state.isStartTriggered) {\n          if (line.length == 5) {\n            arr.push(line);\n          }\n          ;\n        }\n        if (line === 'START') {\n          this.setState({\n            isStartTriggered: true\n          });\n        }\n      }\n      this.setState({\n        lines: arr\n      });\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.state.isStartTriggered ? /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Yes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 45\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 62\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), this.state.lines.map((line, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: line\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default FileLineReader;","map":{"version":3,"names":["React","fs","jsxDEV","_jsxDEV","FileLineReader","Component","constructor","props","state","lines","isStartTriggered","componentDidMount","arr","fetch","then","r","text","split","i","length","line","replace","push","setState","render","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index"],"sources":["/home/freak/myCourse/L4T21/hangman-game/src/components/FileLineReader.js"],"sourcesContent":["import React from 'react';\nimport fs from '../assets/dictionary.txt';\n\nclass FileLineReader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lines: [],\n      isStartTriggered: false\n    };\n  }\n\n  componentDidMount() {\n    const arr = [];\n    fetch(fs)\n      .then(r => r.text())\n      .then(text => {\n        const arr = [];\n        const lines = text.split('\\n');\n        for (let i = 0; i < lines.length; i++) {\n          const line = lines[i].replace(/\\r?\\n|\\r/g, '');\n          if (this.state.isStartTriggered) {\n            if ( line.length == 5 ) {\n              arr.push(line);\n            };\n          }\n          if (line === 'START') {\n            this.setState({ isStartTriggered: true });\n          }\n        }\n        this.setState({ lines: arr }); \n      })\n  }\n\n  render() {\n    return (\n      <ul>\n        <h1>{this.state.isStartTriggered ? (<h1>Yes</h1>) : (<h1>No</h1>)}</h1>\n        {this.state.lines.map((line, index) => (\n          <li key={index}>{line}</li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default FileLineReader;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,EAAE,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,cAAc,SAASJ,KAAK,CAACK,SAAS,CAAC;EAC3CC,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACXC,KAAK,EAAE,EAAE;MACTC,gBAAgB,EAAE;IACpB,CAAC;EACH;EAEAC,iBAAiBA,CAAA,EAAG;IAClB,MAAMC,GAAG,GAAG,EAAE;IACdC,KAAK,CAACZ,EAAE,CAAC,CACNa,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,EAAE,CAAC,CACnBF,IAAI,CAACE,IAAI,IAAI;MACZ,MAAMJ,GAAG,GAAG,EAAE;MACd,MAAMH,KAAK,GAAGO,IAAI,CAACC,KAAK,CAAC,IAAI,CAAC;MAC9B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,KAAK,CAACU,MAAM,EAAED,CAAC,EAAE,EAAE;QACrC,MAAME,IAAI,GAAGX,KAAK,CAACS,CAAC,CAAC,CAACG,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC;QAC9C,IAAI,IAAI,CAACb,KAAK,CAACE,gBAAgB,EAAE;UAC/B,IAAKU,IAAI,CAACD,MAAM,IAAI,CAAC,EAAG;YACtBP,GAAG,CAACU,IAAI,CAACF,IAAI,CAAC;UAChB;UAAC;QACH;QACA,IAAIA,IAAI,KAAK,OAAO,EAAE;UACpB,IAAI,CAACG,QAAQ,CAAC;YAAEb,gBAAgB,EAAE;UAAK,CAAC,CAAC;QAC3C;MACF;MACA,IAAI,CAACa,QAAQ,CAAC;QAAEd,KAAK,EAAEG;MAAI,CAAC,CAAC;IAC/B,CAAC,CAAC;EACN;EAEAY,MAAMA,CAAA,EAAG;IACP,oBACErB,OAAA;MAAAsB,QAAA,gBACEtB,OAAA;QAAAsB,QAAA,EAAK,IAAI,CAACjB,KAAK,CAACE,gBAAgB,gBAAIP,OAAA;UAAAsB,QAAA,EAAI;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,gBAAK1B,OAAA;UAAAsB,QAAA,EAAI;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAM;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,EACtE,IAAI,CAACrB,KAAK,CAACC,KAAK,CAACqB,GAAG,CAAC,CAACV,IAAI,EAAEW,KAAK,kBAChC5B,OAAA;QAAAsB,QAAA,EAAiBL;MAAI,GAAZW,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACf,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC;EAET;AACF;AAEA,eAAezB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}