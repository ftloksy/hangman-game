{"ast":null,"code":"var _jsxFileName = \"/home/freak/myCourse/L4T21/hangman-game/src/components/AlphabetForm.js\";\nimport React, { Component } from 'react';\nimport CharacterButtonRow from './CharacterButtonRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass AlphabetForm extends Component {\n  constructor(props) {\n    super(props);\n\n    // Store the props object as a property of the component instance\n    this.props = props;\n\n    // Define the starting and ending index of each row of buttons\n    this.buttonsRow = [{\n      start: 0,\n      end: 4\n    }, {\n      start: 4,\n      end: 8\n    }, {\n      start: 8,\n      end: 12\n    }, {\n      start: 12,\n      end: 16\n    }, {\n      start: 16,\n      end: 20\n    }, {\n      start: 20,\n      end: 24\n    }, {\n      start: 24,\n      end: 26\n    }];\n\n    // Bind the handleCharacterClick method to the component instance\n    this.handleCharacterClick = this.handleCharacterClick.bind(this);\n  }\n\n  // Event handler for when a character button is clicked\n  handleCharacterClick(event) {\n    // Prevent the default form submission behavior\n    event.preventDefault();\n\n    // Get the value of the clicked button\n    const character = event.nativeEvent.submitter.attributes.value.value;\n\n    // Call the onSubmit prop method with the clicked character as an argument\n    this.props.onSubmit(character);\n  }\n  render() {\n    // Define the alphabet as a string\n    const alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\n    // Destructure the props object\n    const {\n      endgame,\n      tried,\n      resetButton\n    } = this.props;\n    return (\n      /*#__PURE__*/\n      // Render a form element with the charinput class and the handleCharacterClick method as the submit handler\n      _jsxDEV(\"form\", {\n        className: \"charinput\",\n        onSubmit: this.handleCharacterClick,\n        children: this.buttonsRow.map(row =>\n        /*#__PURE__*/\n        // Render a CharacterButtonRow component for each row of buttons\n        _jsxDEV(CharacterButtonRow\n        // Pass the characters for the row as a prop\n        , {\n          characters: alphabet.slice(row.start, row.end).split('')\n          // Pass the endgame, tried, and resetButton props to the CharacterButtonRow component\n          ,\n          endgame: endgame,\n          tried: tried,\n          resetButton: resetButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this)\n    );\n  }\n}\nexport default AlphabetForm;","map":{"version":3,"names":["React","Component","CharacterButtonRow","jsxDEV","_jsxDEV","AlphabetForm","constructor","props","buttonsRow","start","end","handleCharacterClick","bind","event","preventDefault","character","nativeEvent","submitter","attributes","value","onSubmit","render","alphabet","endgame","tried","resetButton","className","children","map","row","characters","slice","split","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/freak/myCourse/L4T21/hangman-game/src/components/AlphabetForm.js"],"sourcesContent":["import React, { Component } from 'react';\nimport CharacterButtonRow from './CharacterButtonRow';\n\nclass AlphabetForm extends Component {\n  constructor(props) {\n    super(props);\n\n    // Store the props object as a property of the component instance\n    this.props = props;\n\n    // Define the starting and ending index of each row of buttons\n    this.buttonsRow = [\n      { start: 0, end: 4 },\n      { start: 4, end: 8 },\n      { start: 8, end: 12 },\n      { start: 12, end: 16 },\n      { start: 16, end: 20 },\n      { start: 20, end: 24 },\n      { start: 24, end: 26 },\n    ];\n\n    // Bind the handleCharacterClick method to the component instance\n    this.handleCharacterClick = this.handleCharacterClick.bind(this);\n  }\n\n  // Event handler for when a character button is clicked\n  handleCharacterClick(event) {\n    // Prevent the default form submission behavior\n    event.preventDefault();\n\n    // Get the value of the clicked button\n    const character = event.nativeEvent.submitter.attributes.value.value;\n\n    // Call the onSubmit prop method with the clicked character as an argument\n    this.props.onSubmit(character);\n  }\n\n  render() {\n    // Define the alphabet as a string\n    const alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\n    // Destructure the props object\n    const { endgame, tried, resetButton } = this.props;\n\n    return (\n      // Render a form element with the charinput class and the handleCharacterClick method as the submit handler\n      <form className=\"charinput\" onSubmit={this.handleCharacterClick}>\n        {this.buttonsRow.map((row) => (\n          // Render a CharacterButtonRow component for each row of buttons\n          <CharacterButtonRow\n            // Pass the characters for the row as a prop\n            characters={alphabet.slice(row.start, row.end).split('')}\n            // Pass the endgame, tried, and resetButton props to the CharacterButtonRow component\n            endgame={endgame}\n            tried={tried}\n            resetButton={resetButton}\n          />\n        ))}\n      </form>\n    );\n  }\n}\n\nexport default AlphabetForm;\n\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,kBAAkB,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,YAAY,SAASJ,SAAS,CAAC;EACnCK,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;;IAEZ;IACA,IAAI,CAACA,KAAK,GAAGA,KAAK;;IAElB;IACA,IAAI,CAACC,UAAU,GAAG,CAChB;MAAEC,KAAK,EAAE,CAAC;MAAEC,GAAG,EAAE;IAAE,CAAC,EACpB;MAAED,KAAK,EAAE,CAAC;MAAEC,GAAG,EAAE;IAAE,CAAC,EACpB;MAAED,KAAK,EAAE,CAAC;MAAEC,GAAG,EAAE;IAAG,CAAC,EACrB;MAAED,KAAK,EAAE,EAAE;MAAEC,GAAG,EAAE;IAAG,CAAC,EACtB;MAAED,KAAK,EAAE,EAAE;MAAEC,GAAG,EAAE;IAAG,CAAC,EACtB;MAAED,KAAK,EAAE,EAAE;MAAEC,GAAG,EAAE;IAAG,CAAC,EACtB;MAAED,KAAK,EAAE,EAAE;MAAEC,GAAG,EAAE;IAAG,CAAC,CACvB;;IAED;IACA,IAAI,CAACC,oBAAoB,GAAG,IAAI,CAACA,oBAAoB,CAACC,IAAI,CAAC,IAAI,CAAC;EAClE;;EAEA;EACAD,oBAAoBA,CAACE,KAAK,EAAE;IAC1B;IACAA,KAAK,CAACC,cAAc,EAAE;;IAEtB;IACA,MAAMC,SAAS,GAAGF,KAAK,CAACG,WAAW,CAACC,SAAS,CAACC,UAAU,CAACC,KAAK,CAACA,KAAK;;IAEpE;IACA,IAAI,CAACZ,KAAK,CAACa,QAAQ,CAACL,SAAS,CAAC;EAChC;EAEAM,MAAMA,CAAA,EAAG;IACP;IACA,MAAMC,QAAQ,GAAG,4BAA4B;;IAE7C;IACA,MAAM;MAAEC,OAAO;MAAEC,KAAK;MAAEC;IAAY,CAAC,GAAG,IAAI,CAAClB,KAAK;IAElD;MAAA;MACE;MACAH,OAAA;QAAMsB,SAAS,EAAC,WAAW;QAACN,QAAQ,EAAE,IAAI,CAACT,oBAAqB;QAAAgB,QAAA,EAC7D,IAAI,CAACnB,UAAU,CAACoB,GAAG,CAAEC,GAAG;QAAA;QACvB;QACAzB,OAAA,CAACF;QACC;QAAA;UACA4B,UAAU,EAAER,QAAQ,CAACS,KAAK,CAACF,GAAG,CAACpB,KAAK,EAAEoB,GAAG,CAACnB,GAAG,CAAC,CAACsB,KAAK,CAAC,EAAE;UACvD;UAAA;UACAT,OAAO,EAAEA,OAAQ;UACjBC,KAAK,EAAEA,KAAM;UACbC,WAAW,EAAEA;QAAY;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAE5B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACG;EAEX;AACF;AAEA,eAAe/B,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}