{"ast":null,"code":"var _jsxFileName = \"/home/freak/myCourse/L4T21/hangman-game/src/components/FileLineReader.js\";\nimport React from 'react';\nimport fs from 'fs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass FileLineReader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lines: [],\n      isStartTriggered: false\n    };\n  }\n  componentDidMount() {\n    fs.readFile(this.props.filename, 'utf8', (err, data) => {\n      if (err) throw err;\n      const lines = data.split('\\n');\n      const arr = [];\n      let isStartTriggered = false;\n      for (let i = 0; i < lines.length; i++) {\n        const line = lines[i].replace(/\\r?\\n|\\r/g, '');\n        if (isStartTriggered) {\n          arr.push(line);\n        }\n        if (line === 'START') {\n          isStartTriggered = true;\n        }\n      }\n      this.setState({\n        lines: arr\n      });\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: this.state.lines.map((line, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: line\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default FileLineReader;","map":{"version":3,"names":["React","fs","jsxDEV","_jsxDEV","FileLineReader","Component","constructor","props","state","lines","isStartTriggered","componentDidMount","readFile","filename","err","data","split","arr","i","length","line","replace","push","setState","render","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/freak/myCourse/L4T21/hangman-game/src/components/FileLineReader.js"],"sourcesContent":["import React from 'react';\nimport fs from 'fs';\n\nclass FileLineReader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lines: [],\n      isStartTriggered: false\n    };\n  }\n\n  componentDidMount() {\n    fs.readFile(this.props.filename, 'utf8', (err, data) => {\n      if (err) throw err;\n      const lines = data.split('\\n');\n      const arr = [];\n      let isStartTriggered = false;\n      for (let i = 0; i < lines.length; i++) {\n        const line = lines[i].replace(/\\r?\\n|\\r/g, '');\n        if (isStartTriggered) {\n          arr.push(line);\n        }\n        if (line === 'START') {\n          isStartTriggered = true;\n        }\n      }\n      this.setState({ lines: arr });\n    });\n  }\n\n  render() {\n    return (\n      <ul>\n        {this.state.lines.map((line, index) => (\n          <li key={index}>{line}</li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default FileLineReader;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,EAAE,MAAM,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,cAAc,SAASJ,KAAK,CAACK,SAAS,CAAC;EAC3CC,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACXC,KAAK,EAAE,EAAE;MACTC,gBAAgB,EAAE;IACpB,CAAC;EACH;EAEAC,iBAAiBA,CAAA,EAAG;IAClBV,EAAE,CAACW,QAAQ,CAAC,IAAI,CAACL,KAAK,CAACM,QAAQ,EAAE,MAAM,EAAE,CAACC,GAAG,EAAEC,IAAI,KAAK;MACtD,IAAID,GAAG,EAAE,MAAMA,GAAG;MAClB,MAAML,KAAK,GAAGM,IAAI,CAACC,KAAK,CAAC,IAAI,CAAC;MAC9B,MAAMC,GAAG,GAAG,EAAE;MACd,IAAIP,gBAAgB,GAAG,KAAK;MAC5B,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,KAAK,CAACU,MAAM,EAAED,CAAC,EAAE,EAAE;QACrC,MAAME,IAAI,GAAGX,KAAK,CAACS,CAAC,CAAC,CAACG,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC;QAC9C,IAAIX,gBAAgB,EAAE;UACpBO,GAAG,CAACK,IAAI,CAACF,IAAI,CAAC;QAChB;QACA,IAAIA,IAAI,KAAK,OAAO,EAAE;UACpBV,gBAAgB,GAAG,IAAI;QACzB;MACF;MACA,IAAI,CAACa,QAAQ,CAAC;QAAEd,KAAK,EAAEQ;MAAI,CAAC,CAAC;IAC/B,CAAC,CAAC;EACJ;EAEAO,MAAMA,CAAA,EAAG;IACP,oBACErB,OAAA;MAAAsB,QAAA,EACG,IAAI,CAACjB,KAAK,CAACC,KAAK,CAACiB,GAAG,CAAC,CAACN,IAAI,EAAEO,KAAK,kBAChCxB,OAAA;QAAAsB,QAAA,EAAiBL;MAAI,GAAZO,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACf;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC;EAET;AACF;AAEA,eAAe3B,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}