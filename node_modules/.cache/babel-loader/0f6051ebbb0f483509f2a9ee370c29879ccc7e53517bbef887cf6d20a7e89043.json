{"ast":null,"code":"var _jsxFileName = \"/home/freak/myCourse/L4T21/hangman-game/src/components/AlphabetForm.js\";\nimport React, { Component } from 'react';\nimport CharacterButton from './CharacterButton';\nimport CharacterButtonRow from './CharacterButtonRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass AlphabetForm extends Component {\n  constructor(props) {\n    super(props);\n    //this.state = {\n    //formData: ['', '', '', '', '', ''],\n    //};\n    this.handleCharacterClick = character => {\n      //const { formData } = this.state;\n      //const updatedFormData = [...formData];\n      //const rowIndex = updatedFormData.findIndex((row) => row.indexOf(character) !== -1);\n\n      //if (rowIndex === -1) {\n      //const emptyRowIndex = updatedFormData.findIndex((row) => row === '');\n      //if (emptyRowIndex !== -1) {\n      //updatedFormData[emptyRowIndex] = character;\n      //}\n      //} else {\n      //const columnIndex = updatedFormData[rowIndex].indexOf(character);\n      //updatedFormData[rowIndex] = updatedFormData[rowIndex].slice(0, columnIndex) + updatedFormData[rowIndex].slice(columnIndex + 1);\n      //}\n\n      //this.setState({ formData: updatedFormData });\n      console.log(character);\n    };\n  }\n  render() {\n    //const { formData } = this.state;\n    const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(CharacterButtonRow, {\n        characters: alphabet.slice(0, 4).split(''),\n        onClick: this.handleCharacterClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CharacterButtonRow, {\n        characters: alphabet.slice(4, 8).split(''),\n        onClick: this.handleCharacterClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CharacterButtonRow, {\n        characters: alphabet.slice(8, 12).split(''),\n        onClick: this.handleCharacterClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CharacterButtonRow, {\n        characters: alphabet.slice(12, 16).split(''),\n        onClick: this.handleCharacterClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CharacterButtonRow, {\n        characters: alphabet.slice(16, 20).split(''),\n        onClick: this.handleCharacterClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CharacterButtonRow, {\n        characters: alphabet.slice(20, 24).split(''),\n        onClick: this.handleCharacterClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CharacterButtonRow, {\n        characters: alphabet.slice(24).split(''),\n        onClick: this.handleCharacterClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default AlphabetForm;","map":{"version":3,"names":["React","Component","CharacterButton","CharacterButtonRow","jsxDEV","_jsxDEV","AlphabetForm","constructor","props","handleCharacterClick","character","console","log","render","alphabet","children","characters","slice","split","onClick","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/freak/myCourse/L4T21/hangman-game/src/components/AlphabetForm.js"],"sourcesContent":["import React, { Component } from 'react';\nimport CharacterButton from './CharacterButton';\nimport CharacterButtonRow from './CharacterButtonRow';\n\nclass AlphabetForm extends Component {\n  constructor(props) {\n    super(props);\n    //this.state = {\n      //formData: ['', '', '', '', '', ''],\n    //};\n  }\n\n  handleCharacterClick = (character) => {\n    //const { formData } = this.state;\n    //const updatedFormData = [...formData];\n    //const rowIndex = updatedFormData.findIndex((row) => row.indexOf(character) !== -1);\n\n    //if (rowIndex === -1) {\n      //const emptyRowIndex = updatedFormData.findIndex((row) => row === '');\n      //if (emptyRowIndex !== -1) {\n        //updatedFormData[emptyRowIndex] = character;\n      //}\n    //} else {\n      //const columnIndex = updatedFormData[rowIndex].indexOf(character);\n      //updatedFormData[rowIndex] = updatedFormData[rowIndex].slice(0, columnIndex) + updatedFormData[rowIndex].slice(columnIndex + 1);\n    //}\n\n    //this.setState({ formData: updatedFormData });\n    console.log(character);\n  };\n\n  render() {\n    //const { formData } = this.state;\n    const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n    return (\n      <form>\n        <CharacterButtonRow characters={alphabet.slice(0, 4).split('')} onClick={this.handleCharacterClick} />\n        <CharacterButtonRow characters={alphabet.slice(4, 8).split('')} onClick={this.handleCharacterClick} />\n        <CharacterButtonRow characters={alphabet.slice(8, 12).split('')} onClick={this.handleCharacterClick} />\n        <CharacterButtonRow characters={alphabet.slice(12, 16).split('')} onClick={this.handleCharacterClick} />\n        <CharacterButtonRow characters={alphabet.slice(16, 20).split('')} onClick={this.handleCharacterClick} />\n        <CharacterButtonRow characters={alphabet.slice(20, 24).split('')} onClick={this.handleCharacterClick} />\n        <CharacterButtonRow characters={alphabet.slice(24).split('')} onClick={this.handleCharacterClick} />\n      </form>\n    );\n  }\n}\n\nexport default AlphabetForm;\n\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,kBAAkB,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,YAAY,SAASL,SAAS,CAAC;EACnCM,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ;IACE;IACF;IAAA,KAGFC,oBAAoB,GAAIC,SAAS,IAAK;MACpC;MACA;MACA;;MAEA;MACE;MACA;MACE;MACF;MACF;MACE;MACA;MACF;;MAEA;MACAC,OAAO,CAACC,GAAG,CAACF,SAAS,CAAC;IACxB,CAAC;EAnBD;EAqBAG,MAAMA,CAAA,EAAG;IACP;IACA,MAAMC,QAAQ,GAAG,4BAA4B;IAE7C,oBACET,OAAA;MAAAU,QAAA,gBACEV,OAAA,CAACF,kBAAkB;QAACa,UAAU,EAAEF,QAAQ,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,KAAK,CAAC,EAAE,CAAE;QAACC,OAAO,EAAE,IAAI,CAACV;MAAqB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACtGlB,OAAA,CAACF,kBAAkB;QAACa,UAAU,EAAEF,QAAQ,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,KAAK,CAAC,EAAE,CAAE;QAACC,OAAO,EAAE,IAAI,CAACV;MAAqB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACtGlB,OAAA,CAACF,kBAAkB;QAACa,UAAU,EAAEF,QAAQ,CAACG,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAACC,KAAK,CAAC,EAAE,CAAE;QAACC,OAAO,EAAE,IAAI,CAACV;MAAqB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACvGlB,OAAA,CAACF,kBAAkB;QAACa,UAAU,EAAEF,QAAQ,CAACG,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAACC,KAAK,CAAC,EAAE,CAAE;QAACC,OAAO,EAAE,IAAI,CAACV;MAAqB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACxGlB,OAAA,CAACF,kBAAkB;QAACa,UAAU,EAAEF,QAAQ,CAACG,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAACC,KAAK,CAAC,EAAE,CAAE;QAACC,OAAO,EAAE,IAAI,CAACV;MAAqB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACxGlB,OAAA,CAACF,kBAAkB;QAACa,UAAU,EAAEF,QAAQ,CAACG,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAACC,KAAK,CAAC,EAAE,CAAE;QAACC,OAAO,EAAE,IAAI,CAACV;MAAqB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACxGlB,OAAA,CAACF,kBAAkB;QAACa,UAAU,EAAEF,QAAQ,CAACG,KAAK,CAAC,EAAE,CAAC,CAACC,KAAK,CAAC,EAAE,CAAE;QAACC,OAAO,EAAE,IAAI,CAACV;MAAqB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC/F;EAEX;AACF;AAEA,eAAejB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}