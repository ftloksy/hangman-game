{"ast":null,"code":"var _jsxFileName = \"/home/freak/myCourse/L4T21/hangman-game/src/components/CharacterButton.js\";\nimport React, { Component } from 'react';\n\n/**\n * React.js component, It define 26 buttons [a-z],\n * User can use the buttons to input his choice's character.\n * When user click any buttons, that buttons will change to\n * another color and disable the click event handler.\n * So in the Hangman Game, User just can click every button.\n * when every round till user restart the game.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass CharacterButton extends Component {\n  /**\n   * In the constructor,\n   * the clicked state is initialized to false\n   * and the character prop is set as the component's own state.\n   * The handleClick method is bound to the component's this context.\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      clicked: false,\n      character: props.character\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  /**\n   * There is an async resetClickedState method\n   * which resets the clicked state to false.\n   * This method will call by CharacterButtonRow component.\n   */\n  async resetClickedState() {\n    await this.setState({\n      clicked: false\n    });\n  }\n\n  /**\n   * The handleClick method checks whether the game has ended\n   * or whether the current character has already been tried.\n   * If either of these conditions is true,\n   * the method returns without doing anything.\n   * Otherwise, it toggles the clicked state of the component using setState.\n   */\n  handleClick() {\n    const {\n      endgame,\n      tried,\n      character\n    } = this.props;\n    if (endgame || tried.indexOf(character) !== -1) {\n      return;\n    }\n    this.setState(prevState => ({\n      clicked: !prevState.clicked\n    }));\n  }\n\n  /**\n   * The render method returns a button element with the character value\n   * as the value attribute.\n   * The button's background color depends on the clicked state,\n   * which is determined by the bgColor variable.\n   * The button also contains an SVG element with the character\n   * as the text content.\n   */\n  render() {\n    const {\n      character,\n      clicked\n    } = this.state;\n    const bgColor = clicked ? '#00FF00' : '#FFFFFF';\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      value: character,\n      onClick: this.handleClick,\n      style: {\n        backgroundColor: bgColor\n      },\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: \"50\",\n        height: \"50\",\n        children: /*#__PURE__*/_jsxDEV(\"text\", {\n          x: \"25\",\n          y: \"30\",\n          \"font-size\": \"42\",\n          \"text-anchor\": \"middle\",\n          \"dominant-baseline\": \"middle\",\n          children: character\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n/**\n * Finally, the CharacterButton component is exported\n * as the default export of the module.\n */\nexport default CharacterButton;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","CharacterButton","constructor","props","state","clicked","character","handleClick","bind","resetClickedState","setState","endgame","tried","indexOf","prevState","render","bgColor","type","value","onClick","style","backgroundColor","children","width","height","x","y","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/freak/myCourse/L4T21/hangman-game/src/components/CharacterButton.js"],"sourcesContent":["import React, { Component } from 'react';\n\n/**\n * React.js component, It define 26 buttons [a-z],\n * User can use the buttons to input his choice's character.\n * When user click any buttons, that buttons will change to\n * another color and disable the click event handler.\n * So in the Hangman Game, User just can click every button.\n * when every round till user restart the game.\n */\nclass CharacterButton extends Component {\n  /**\n   * In the constructor,\n   * the clicked state is initialized to false\n   * and the character prop is set as the component's own state.\n   * The handleClick method is bound to the component's this context.\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      clicked: false,\n      character: props.character\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  /**\n   * There is an async resetClickedState method\n   * which resets the clicked state to false.\n   * This method will call by CharacterButtonRow component.\n   */\n  async resetClickedState() {\n    await this.setState({clicked: false});\n  }\n\n  /**\n   * The handleClick method checks whether the game has ended\n   * or whether the current character has already been tried.\n   * If either of these conditions is true,\n   * the method returns without doing anything.\n   * Otherwise, it toggles the clicked state of the component using setState.\n   */\n  handleClick() {\n    const {endgame, tried, character} = this.props;\n    if (endgame || tried.indexOf(character) !== -1 ) {\n      return;\n    }\n    this.setState(prevState => ({\n      clicked: !prevState.clicked\n    }));\n  }\n\n  /**\n   * The render method returns a button element with the character value\n   * as the value attribute.\n   * The button's background color depends on the clicked state,\n   * which is determined by the bgColor variable.\n   * The button also contains an SVG element with the character\n   * as the text content.\n   */\n  render() {\n    const { character, clicked } = this.state;\n    const bgColor = clicked ? '#00FF00' : '#FFFFFF';\n\n    return (\n      <button \n        type=\"submit\"\n        value={character}\n        onClick={this.handleClick}\n        style={{backgroundColor: bgColor}}\n        >\n        <svg width=\"50\" height=\"50\">\n          <text x=\"25\" y=\"30\" font-size=\"42\"\n            text-anchor=\"middle\"\n            dominant-baseline=\"middle\">\n            {character}\n          </text>\n        </svg>\n      </button>\n    );\n  }\n}\n\n/**\n * Finally, the CharacterButton component is exported\n * as the default export of the module.\n */\nexport default CharacterButton;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA,SAAAC,MAAA,IAAAC,OAAA;AAQA,MAAMC,eAAe,SAASH,SAAS,CAAC;EACtC;AACF;AACA;AACA;AACA;AACA;EACEI,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACXC,OAAO,EAAE,KAAK;MACdC,SAAS,EAAEH,KAAK,CAACG;IACnB,CAAC;IACD,IAAI,CAACC,WAAW,GAAG,IAAI,CAACA,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC;EAChD;;EAEA;AACF;AACA;AACA;AACA;EACE,MAAMC,iBAAiBA,CAAA,EAAG;IACxB,MAAM,IAAI,CAACC,QAAQ,CAAC;MAACL,OAAO,EAAE;IAAK,CAAC,CAAC;EACvC;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEE,WAAWA,CAAA,EAAG;IACZ,MAAM;MAACI,OAAO;MAAEC,KAAK;MAAEN;IAAS,CAAC,GAAG,IAAI,CAACH,KAAK;IAC9C,IAAIQ,OAAO,IAAIC,KAAK,CAACC,OAAO,CAACP,SAAS,CAAC,KAAK,CAAC,CAAC,EAAG;MAC/C;IACF;IACA,IAAI,CAACI,QAAQ,CAACI,SAAS,KAAK;MAC1BT,OAAO,EAAE,CAACS,SAAS,CAACT;IACtB,CAAC,CAAC,CAAC;EACL;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEU,MAAMA,CAAA,EAAG;IACP,MAAM;MAAET,SAAS;MAAED;IAAQ,CAAC,GAAG,IAAI,CAACD,KAAK;IACzC,MAAMY,OAAO,GAAGX,OAAO,GAAG,SAAS,GAAG,SAAS;IAE/C,oBACEL,OAAA;MACEiB,IAAI,EAAC,QAAQ;MACbC,KAAK,EAAEZ,SAAU;MACjBa,OAAO,EAAE,IAAI,CAACZ,WAAY;MAC1Ba,KAAK,EAAE;QAACC,eAAe,EAAEL;MAAO,CAAE;MAAAM,QAAA,eAElCtB,OAAA;QAAKuB,KAAK,EAAC,IAAI;QAACC,MAAM,EAAC,IAAI;QAAAF,QAAA,eACzBtB,OAAA;UAAMyB,CAAC,EAAC,IAAI;UAACC,CAAC,EAAC,IAAI;UAAC,aAAU,IAAI;UAChC,eAAY,QAAQ;UACpB,qBAAkB,QAAQ;UAAAJ,QAAA,EACzBhB;QAAS;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACL;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACH;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC;EAEb;AACF;;AAEA;AACA;AACA;AACA;AACA,eAAe7B,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}