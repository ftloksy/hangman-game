{"ast":null,"code":"var _jsxFileName = \"/home/freak/myCourse/L4T21/hangman-game/src/components/FileLineReader.js\";\nimport React from 'react';\nimport fs from '../assets/dictionary.txt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass FileLineReader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lines: [],\n      isStartTriggered: false\n    };\n  }\n  componentDidMount() {\n    const arr = [];\n    fetch(fs).then(r => r.text()).then(text => {\n      arr.push(text);\n      console.log(text);\n    });\n    this.setState({\n      lines: arr\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"I am here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), this.state.lines.map((line, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: line\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default FileLineReader;","map":{"version":3,"names":["React","fs","jsxDEV","_jsxDEV","FileLineReader","Component","constructor","props","state","lines","isStartTriggered","componentDidMount","arr","fetch","then","r","text","push","console","log","setState","render","children","fileName","_jsxFileName","lineNumber","columnNumber","map","line","index"],"sources":["/home/freak/myCourse/L4T21/hangman-game/src/components/FileLineReader.js"],"sourcesContent":["import React from 'react';\nimport fs from '../assets/dictionary.txt';\n\nclass FileLineReader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lines: [],\n      isStartTriggered: false\n    };\n  }\n\n  componentDidMount() {\n    const arr = [];\n    fetch(fs)\n      .then(r => r.text())\n      .then(text => {\n        arr.push(text);\n        console.log(text);\n      });\n    this.setState({ lines: arr });\n  }\n\n  render() {\n    return (\n      <ul>\n        <h1>I am here</h1>\n        {this.state.lines.map((line, index) => (\n          <li key={index}>{line}</li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default FileLineReader;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,EAAE,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,cAAc,SAASJ,KAAK,CAACK,SAAS,CAAC;EAC3CC,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACXC,KAAK,EAAE,EAAE;MACTC,gBAAgB,EAAE;IACpB,CAAC;EACH;EAEAC,iBAAiBA,CAAA,EAAG;IAClB,MAAMC,GAAG,GAAG,EAAE;IACdC,KAAK,CAACZ,EAAE,CAAC,CACNa,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,EAAE,CAAC,CACnBF,IAAI,CAACE,IAAI,IAAI;MACZJ,GAAG,CAACK,IAAI,CAACD,IAAI,CAAC;MACdE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACnB,CAAC,CAAC;IACJ,IAAI,CAACI,QAAQ,CAAC;MAAEX,KAAK,EAAEG;IAAI,CAAC,CAAC;EAC/B;EAEAS,MAAMA,CAAA,EAAG;IACP,oBACElB,OAAA;MAAAmB,QAAA,gBACEnB,OAAA;QAAAmB,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,EACjB,IAAI,CAAClB,KAAK,CAACC,KAAK,CAACkB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAChC1B,OAAA;QAAAmB,QAAA,EAAiBM;MAAI,GAAZC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACf,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC;EAET;AACF;AAEA,eAAetB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}