{"ast":null,"code":"var _jsxFileName = \"/home/freak/myCourse/L4T21/hangman-game/src/components/AlphabetForm.js\";\nimport React from 'react';\n//import './AlphabetForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass AlphabetForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleCharacterClick = (rowIndex, columnIndex, character) => {\n      const updatedFormData = [...this.state.formData];\n      updatedFormData[rowIndex][columnIndex] = character;\n      this.setState({\n        formData: updatedFormData\n      });\n    };\n    this.state = {\n      formData: Array.from({\n        length: 7\n      }, () => Array.from({\n        length: 4\n      }, () => ''))\n    };\n  }\n  render() {\n    const {\n      formData\n    } = this.state;\n    const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [formData.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: row.map((character, columnIndex) => {\n          if (columnIndex === 3 && rowIndex === 6) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cell\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button\",\n                onClick: () => this.handleCharacterClick(rowIndex, columnIndex, ''),\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  width: \"50\",\n                  height: \"50\",\n                  children: /*#__PURE__*/_jsxDEV(\"text\", {\n                    x: \"25\",\n                    y: \"35\",\n                    children: character\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 32,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 31,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 21\n              }, this)\n            }, columnIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 19\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cell\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button\",\n                onClick: () => this.handleCharacterClick(rowIndex, columnIndex, alphabet.charAt(rowIndex * 4 + columnIndex)),\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  width: \"50\",\n                  height: \"50\",\n                  children: /*#__PURE__*/_jsxDEV(\"text\", {\n                    x: \"25\",\n                    y: \"35\",\n                    children: alphabet.charAt(rowIndex * 4 + columnIndex)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 42,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 21\n              }, this)\n            }, columnIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 19\n            }, this);\n          }\n        })\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Form Data:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: formData.map(row => row.join(' ')).join('\\n'),\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default AlphabetForm;","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","AlphabetForm","Component","constructor","props","handleCharacterClick","rowIndex","columnIndex","character","updatedFormData","state","formData","setState","Array","from","length","render","alphabet","children","map","row","className","onClick","width","height","x","y","fileName","_jsxFileName","lineNumber","columnNumber","charAt","value","join","readOnly"],"sources":["/home/freak/myCourse/L4T21/hangman-game/src/components/AlphabetForm.js"],"sourcesContent":["import React from 'react';\n//import './AlphabetForm.css';\n\nclass AlphabetForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formData: Array.from({ length: 7 }, () => Array.from({ length: 4 }, () => '')),\n    };\n  }\n\n  handleCharacterClick = (rowIndex, columnIndex, character) => {\n    const updatedFormData = [...this.state.formData];\n    updatedFormData[rowIndex][columnIndex] = character;\n    this.setState({ formData: updatedFormData });\n  };\n\n  render() {\n    const { formData } = this.state;\n    const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n    return (\n      <form>\n        {formData.map((row, rowIndex) => (\n          <div key={rowIndex} className=\"row\">\n            {row.map((character, columnIndex) => {\n              if (columnIndex === 3 && rowIndex === 6) {\n                return (\n                  <div key={columnIndex} className=\"cell\">\n                    <button className=\"button\" onClick={() => this.handleCharacterClick(rowIndex, columnIndex, '')}>\n                      <svg width=\"50\" height=\"50\">\n                        <text x=\"25\" y=\"35\">{character}</text>\n                      </svg>\n                    </button>\n                  </div>\n                );\n              } else {\n                return (\n                  <div key={columnIndex} className=\"cell\">\n                    <button className=\"button\" onClick={() => this.handleCharacterClick(rowIndex, columnIndex, alphabet.charAt(rowIndex * 4 + columnIndex))}>\n                      <svg width=\"50\" height=\"50\">\n                        <text x=\"25\" y=\"35\">{alphabet.charAt(rowIndex * 4 + columnIndex)}</text>\n                      </svg>\n                    </button>\n                  </div>\n                );\n              }\n            })}\n          </div>\n        ))}\n        <div>\n          <label>\n            Form Data:\n            <textarea value={formData.map(row => row.join(' ')).join('\\n')} readOnly />\n          </label>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default AlphabetForm;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}