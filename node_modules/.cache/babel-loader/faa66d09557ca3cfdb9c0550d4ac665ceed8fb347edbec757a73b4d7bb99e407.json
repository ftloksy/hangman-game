{"ast":null,"code":"var _jsxFileName = \"/home/freak/myCourse/L4T21/hangman-game/src/components/AlphabetForm.js\";\nimport React, { Component } from 'react';\nimport CharacterButton from './CharacterButton';\nimport CharacterButtonRow from './CharacterButtonRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass AlphabetForm extends Component {\n  constructor(props) {\n    super(props);\n    //this.state = {\n    //formData: ['', '', '', '', '', ''],\n    //};\n  }\n\n  handleCharacterClick(event) {\n    //const { formData } = this.state;\n    //const updatedFormData = [...formData];\n    //const rowIndex = updatedFormData.findIndex((row) => row.indexOf(character) !== -1);\n\n    //if (rowIndex === -1) {\n    //const emptyRowIndex = updatedFormData.findIndex((row) => row === '');\n    //if (emptyRowIndex !== -1) {\n    //updatedFormData[emptyRowIndex] = character;\n    //}\n    //} else {\n    //const columnIndex = updatedFormData[rowIndex].indexOf(character);\n    //updatedFormData[rowIndex] = updatedFormData[rowIndex].slice(0, columnIndex) + updatedFormData[rowIndex].slice(columnIndex + 1);\n    //}\n\n    //this.setState({ formData: updatedFormData });\n    const character = event.nativeEvent.submitter.attributes.value.value;\n    console.log(character);\n  }\n  render() {\n    //const { formData } = this.state;\n    const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleCharacterClick,\n      children: [/*#__PURE__*/_jsxDEV(CharacterButtonRow, {\n        characters: alphabet.slice(0, 4).split('')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CharacterButtonRow, {\n        characters: alphabet.slice(4, 8).split('')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CharacterButtonRow, {\n        characters: alphabet.slice(8, 12).split('')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CharacterButtonRow, {\n        characters: alphabet.slice(12, 16).split('')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CharacterButtonRow, {\n        characters: alphabet.slice(16, 20).split('')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CharacterButtonRow, {\n        characters: alphabet.slice(20, 24).split('')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CharacterButtonRow, {\n        characters: alphabet.slice(24).split('')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default AlphabetForm;","map":{"version":3,"names":["React","Component","CharacterButton","CharacterButtonRow","jsxDEV","_jsxDEV","AlphabetForm","constructor","props","handleCharacterClick","event","character","nativeEvent","submitter","attributes","value","console","log","render","alphabet","onSubmit","children","characters","slice","split","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/freak/myCourse/L4T21/hangman-game/src/components/AlphabetForm.js"],"sourcesContent":["import React, { Component } from 'react';\nimport CharacterButton from './CharacterButton';\nimport CharacterButtonRow from './CharacterButtonRow';\n\nclass AlphabetForm extends Component {\n  constructor(props) {\n    super(props);\n    //this.state = {\n      //formData: ['', '', '', '', '', ''],\n    //};\n  }\n\n  handleCharacterClick (event)  {\n    //const { formData } = this.state;\n    //const updatedFormData = [...formData];\n    //const rowIndex = updatedFormData.findIndex((row) => row.indexOf(character) !== -1);\n\n    //if (rowIndex === -1) {\n      //const emptyRowIndex = updatedFormData.findIndex((row) => row === '');\n      //if (emptyRowIndex !== -1) {\n        //updatedFormData[emptyRowIndex] = character;\n      //}\n    //} else {\n      //const columnIndex = updatedFormData[rowIndex].indexOf(character);\n      //updatedFormData[rowIndex] = updatedFormData[rowIndex].slice(0, columnIndex) + updatedFormData[rowIndex].slice(columnIndex + 1);\n    //}\n\n    //this.setState({ formData: updatedFormData });\n    const character = event.nativeEvent.submitter.attributes.value.value;\n    console.log(character);\n  };\n\n  render() {\n    //const { formData } = this.state;\n    const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n    return (\n      <form onSubmit={this.handleCharacterClick}>\n        <CharacterButtonRow characters={alphabet.slice(0, 4).split('')} />\n        <CharacterButtonRow characters={alphabet.slice(4, 8).split('')} />\n        <CharacterButtonRow characters={alphabet.slice(8, 12).split('')} />\n        <CharacterButtonRow characters={alphabet.slice(12, 16).split('')} />\n        <CharacterButtonRow characters={alphabet.slice(16, 20).split('')} />\n        <CharacterButtonRow characters={alphabet.slice(20, 24).split('')} />\n        <CharacterButtonRow characters={alphabet.slice(24).split('')} />\n      </form>\n    );\n  }\n}\n\nexport default AlphabetForm;\n\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,kBAAkB,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,YAAY,SAASL,SAAS,CAAC;EACnCM,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ;IACE;IACF;EACF;;EAEAC,oBAAoBA,CAAEC,KAAK,EAAG;IAC5B;IACA;IACA;;IAEA;IACE;IACA;IACE;IACF;IACF;IACE;IACA;IACF;;IAEA;IACA,MAAMC,SAAS,GAAGD,KAAK,CAACE,WAAW,CAACC,SAAS,CAACC,UAAU,CAACC,KAAK,CAACA,KAAK;IACpEC,OAAO,CAACC,GAAG,CAACN,SAAS,CAAC;EACxB;EAEAO,MAAMA,CAAA,EAAG;IACP;IACA,MAAMC,QAAQ,GAAG,4BAA4B;IAE7C,oBACEd,OAAA;MAAMe,QAAQ,EAAE,IAAI,CAACX,oBAAqB;MAAAY,QAAA,gBACxChB,OAAA,CAACF,kBAAkB;QAACmB,UAAU,EAAEH,QAAQ,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,KAAK,CAAC,EAAE;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAClEvB,OAAA,CAACF,kBAAkB;QAACmB,UAAU,EAAEH,QAAQ,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,KAAK,CAAC,EAAE;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAClEvB,OAAA,CAACF,kBAAkB;QAACmB,UAAU,EAAEH,QAAQ,CAACI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAACC,KAAK,CAAC,EAAE;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACnEvB,OAAA,CAACF,kBAAkB;QAACmB,UAAU,EAAEH,QAAQ,CAACI,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAACC,KAAK,CAAC,EAAE;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACpEvB,OAAA,CAACF,kBAAkB;QAACmB,UAAU,EAAEH,QAAQ,CAACI,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAACC,KAAK,CAAC,EAAE;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACpEvB,OAAA,CAACF,kBAAkB;QAACmB,UAAU,EAAEH,QAAQ,CAACI,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAACC,KAAK,CAAC,EAAE;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACpEvB,OAAA,CAACF,kBAAkB;QAACmB,UAAU,EAAEH,QAAQ,CAACI,KAAK,CAAC,EAAE,CAAC,CAACC,KAAK,CAAC,EAAE;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC3D;EAEX;AACF;AAEA,eAAetB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}