{"ast":null,"code":"var _jsxFileName = \"/home/freak/myCourse/L4T21/hangman-game/src/components/ArrayDisplay.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ArrayDisplay extends React.Component {\n  render() {\n    // Extract the `array` prop from the `props` object\n    const {\n      array\n    } = this.props;\n\n    // Create an empty array to store the characters of the word\n    const word = [];\n\n    // Loop through each object in the array\n    for (let i = 0; i < array.length; i++) {\n      // Get the current object\n      const obj = array[i];\n\n      /**\n       * If the object has a `found` property that is `true`,\n       * use its `character` property\n       * Otherwise, use an underscore character\n       */\n      const character = obj.found ? obj.character : '_';\n\n      // Add the character to the `word` array\n      word.push(character);\n    }\n\n    /**\n     * Join the characters in the `word` array with\n     * a space character and return them in a `div` element\n     */\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: word.join(' ')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n}\nexport default ArrayDisplay;","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ArrayDisplay","Component","render","array","props","word","i","length","obj","character","found","push","children","join","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/freak/myCourse/L4T21/hangman-game/src/components/ArrayDisplay.js"],"sourcesContent":["import React from 'react';\n\nclass ArrayDisplay extends React.Component {\n  render() {\n    // Extract the `array` prop from the `props` object\n    const { array } = this.props;\n\n    // Create an empty array to store the characters of the word\n    const word = [];\n\n    // Loop through each object in the array\n    for (let i = 0; i < array.length; i++) {\n      // Get the current object\n      const obj = array[i];\n\n      /**\n       * If the object has a `found` property that is `true`,\n       * use its `character` property\n       * Otherwise, use an underscore character\n       */\n      const character = obj.found ? obj.character : '_';\n\n      // Add the character to the `word` array\n      word.push(character);\n    }\n\n    /**\n     * Join the characters in the `word` array with\n     * a space character and return them in a `div` element\n     */\n    return <div>{word.join(' ')}</div>;\n  }\n}\n\nexport default ArrayDisplay;\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,SAASH,KAAK,CAACI,SAAS,CAAC;EACzCC,MAAMA,CAAA,EAAG;IACP;IACA,MAAM;MAAEC;IAAM,CAAC,GAAG,IAAI,CAACC,KAAK;;IAE5B;IACA,MAAMC,IAAI,GAAG,EAAE;;IAEf;IACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,KAAK,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;MACrC;MACA,MAAME,GAAG,GAAGL,KAAK,CAACG,CAAC,CAAC;;MAEpB;AACN;AACA;AACA;AACA;MACM,MAAMG,SAAS,GAAGD,GAAG,CAACE,KAAK,GAAGF,GAAG,CAACC,SAAS,GAAG,GAAG;;MAEjD;MACAJ,IAAI,CAACM,IAAI,CAACF,SAAS,CAAC;IACtB;;IAEA;AACJ;AACA;AACA;IACI,oBAAOV,OAAA;MAAAa,QAAA,EAAMP,IAAI,CAACQ,IAAI,CAAC,GAAG;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO;EACpC;AACF;AAEA,eAAejB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}