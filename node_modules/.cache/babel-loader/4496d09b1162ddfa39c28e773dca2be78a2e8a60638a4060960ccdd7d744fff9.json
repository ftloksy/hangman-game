{"ast":null,"code":"var _jsxFileName = \"/home/freak/myCourse/L4T21/hangman-game/src/components/FileLineReader.js\";\nimport React from 'react';\nimport fs from '../assets/dictionary.txt';\nimport ArrayDisplay from './ArrayDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass FileLineReader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lines: [],\n      isStartTriggered: false\n    };\n  }\n  componentDidMount() {\n    fetch(fs).then(r => r.text()).then(text => {\n      const arr = [];\n      const lines = text.split('\\n');\n      for (let i = 0; i < lines.length; i++) {\n        const line = lines[i].replace(/\\r?\\n|\\r/g, '');\n        if (this.state.isStartTriggered) {\n          if (line.length == 5) {\n            arr.push(line);\n          }\n          ;\n        }\n        if (line === 'START') {\n          this.setState({\n            isStartTriggered: true\n          });\n        }\n      }\n      return arr;\n    }).then(arr => {\n      const gameArray = [];\n      const randomIndex = Math.floor(Math.random() * arr.length);\n      const choice = arr[randomIndex];\n      for (const char of choice) {\n        gameArray.push({\n          found: false,\n          character: char\n        });\n      }\n      //gameArray[3].found = true;\n      this.setState({\n        lines: gameArray\n      });\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(ArrayDisplay, {\n        array: this.state.lines\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default FileLineReader;","map":{"version":3,"names":["React","fs","ArrayDisplay","jsxDEV","_jsxDEV","FileLineReader","Component","constructor","props","state","lines","isStartTriggered","componentDidMount","fetch","then","r","text","arr","split","i","length","line","replace","push","setState","gameArray","randomIndex","Math","floor","random","choice","char","found","character","render","children","array","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/freak/myCourse/L4T21/hangman-game/src/components/FileLineReader.js"],"sourcesContent":["import React from 'react';\nimport fs from '../assets/dictionary.txt';\nimport ArrayDisplay from './ArrayDisplay';\n\nclass FileLineReader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lines: [],\n      isStartTriggered: false\n    };\n  }\n\n  componentDidMount() {\n    fetch(fs)\n      .then(r => r.text())\n      .then(text => {\n        const arr = [];\n        const lines = text.split('\\n');\n        for (let i = 0; i < lines.length; i++) {\n          const line = lines[i].replace(/\\r?\\n|\\r/g, '');\n          if (this.state.isStartTriggered) {\n            if ( line.length == 5 ) {\n              arr.push(line);\n            };\n          }\n          if (line === 'START') {\n            this.setState({ isStartTriggered: true });\n          }\n        }\n        return arr;\n      })\n      .then(arr => {\n        const gameArray = [];\n        const randomIndex = Math.floor(Math.random() * arr.length);\n        const choice = arr[randomIndex];\n        for (const char of choice) {\n          gameArray.push({ found: false, character: char });\n        }\n        //gameArray[3].found = true;\n        this.setState({ lines: gameArray }); \n      })\n  }\n\n  render() {\n    return (\n      <ul>\n        <ArrayDisplay array={this.state.lines} />\n      </ul>\n    );\n  }\n}\n\nexport default FileLineReader;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,EAAE,MAAM,0BAA0B;AACzC,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,cAAc,SAASL,KAAK,CAACM,SAAS,CAAC;EAC3CC,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACXC,KAAK,EAAE,EAAE;MACTC,gBAAgB,EAAE;IACpB,CAAC;EACH;EAEAC,iBAAiBA,CAAA,EAAG;IAClBC,KAAK,CAACZ,EAAE,CAAC,CACNa,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,EAAE,CAAC,CACnBF,IAAI,CAACE,IAAI,IAAI;MACZ,MAAMC,GAAG,GAAG,EAAE;MACd,MAAMP,KAAK,GAAGM,IAAI,CAACE,KAAK,CAAC,IAAI,CAAC;MAC9B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,KAAK,CAACU,MAAM,EAAED,CAAC,EAAE,EAAE;QACrC,MAAME,IAAI,GAAGX,KAAK,CAACS,CAAC,CAAC,CAACG,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC;QAC9C,IAAI,IAAI,CAACb,KAAK,CAACE,gBAAgB,EAAE;UAC/B,IAAKU,IAAI,CAACD,MAAM,IAAI,CAAC,EAAG;YACtBH,GAAG,CAACM,IAAI,CAACF,IAAI,CAAC;UAChB;UAAC;QACH;QACA,IAAIA,IAAI,KAAK,OAAO,EAAE;UACpB,IAAI,CAACG,QAAQ,CAAC;YAAEb,gBAAgB,EAAE;UAAK,CAAC,CAAC;QAC3C;MACF;MACA,OAAOM,GAAG;IACZ,CAAC,CAAC,CACDH,IAAI,CAACG,GAAG,IAAI;MACX,MAAMQ,SAAS,GAAG,EAAE;MACpB,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGZ,GAAG,CAACG,MAAM,CAAC;MAC1D,MAAMU,MAAM,GAAGb,GAAG,CAACS,WAAW,CAAC;MAC/B,KAAK,MAAMK,IAAI,IAAID,MAAM,EAAE;QACzBL,SAAS,CAACF,IAAI,CAAC;UAAES,KAAK,EAAE,KAAK;UAAEC,SAAS,EAAEF;QAAK,CAAC,CAAC;MACnD;MACA;MACA,IAAI,CAACP,QAAQ,CAAC;QAAEd,KAAK,EAAEe;MAAU,CAAC,CAAC;IACrC,CAAC,CAAC;EACN;EAEAS,MAAMA,CAAA,EAAG;IACP,oBACE9B,OAAA;MAAA+B,QAAA,eACE/B,OAAA,CAACF,YAAY;QAACkC,KAAK,EAAE,IAAI,CAAC3B,KAAK,CAACC;MAAM;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACtC;EAET;AACF;AAEA,eAAenC,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}